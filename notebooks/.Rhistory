ggplot(dat,aes(x=rating, group=cond, fill=cond)) +
geom_histogram(position="identity", alpha=0.5, binwidth=0.5, aes(y=..density..)) +
theme_bw()
ggplot(dat,aes(x=rating, group=cond, fill=cond)) +
geom_histogram(position="dodge", alpha=0.5, binwidth=0.5, aes(y=..density..)) +
theme_bw()
ggplot(dat, aes(x=rating, group=cond, fill=cond)) +
geom_density(position="identity", alpha=0.5, aes(y=..density..)) +
theme_bw()
boxplot(rating ~ cond,
data = dat)
stripchart(dat$rating ~ dat$cond,
vertical = TRUE,
method = "jitter",
pch = 19,
add = TRUE,
col = 1:length(levels(dat$cond)))
boxplot(rating ~ cond,
data = dat,
col = rainbow(ncol(trees)))
boxplot(rating ~ cond,
data = dat,
col = rainbow(ncol(trees)),
horizontal = TRUE)
plot(x = mtcars$wt,
y = mtcars$mpg,
main = "wt - mpg",
xlab = "wt",
ylab = "mpg")
reg <- lm(mpg ~ wt, data = mtcars)
abline(reg, col = "red")
pairs(mtcars, panel = panel.smooth, main = "LifeCycleSavings")
library(GGally)
ggpairs(mtcars)
plot(x = mtcars$wt,
y = mtcars$mpg,
main = "wt - mpg",
xlab = "wt",
ylab = "mpg")
reg <- lm(mpg ~ wt, data = mtcars)
plot(x = mtcars$speed,
y = mtcars$dist,
main = "speed - dist",
xlab = "speed",
ylab = "dist")
plot(x = cars$speed,
y = cars$dist,
main = "speed - dist",
xlab = "speed",
ylab = "dist")
ggplot(tcars, aes(x=speed, y=dist)) + geom_point()
ggplot(cars, aes(x=speed, y=dist)) + geom_point()
plot(x = cars$speed,
y = cars$dist,
main = "speed - dist",
xlab = "speed",
ylab = "dist")
plot(x = cars$speed,
y = cars$dist,
main = "speed - dist",
xlab = "speed",
ylab = "dist")
Dibujar mediante un gráfico de puntos (scatterplot) la información contenida (mediante “ggplot2”).
la función “head”.
ggplot(cars, aes(x=speed, y=dist)) + geom_point()
ggplot(cars, aes(x=speed, y=dist)) + geom_point() +
geom_point(shape=18, color="red")
ggplot(cars, aes(x=speed, y=dist)) + geom_point()
ggplot(cars, aes(x=speed, y=dist)) +
geom_point() +
geom_point(shape=18, color=speed)
ggplot(cars, aes(x=speed, y=dist)) +
geom_point() +
geom_point(shape=18, color=cars$speed)
ggplot(cars, aes(x=speed, y=dist)) +
geom_point() +
geom_point(shape=18, color=cars$dist)
ggplot(cars, aes(x=speed, y=dist)) +
geom_point() +
geom_point(shape=18, color=cars$dist) +
geom_smooth(method=lm,  linetype="dashed",
color="darkred", fill="blue")
ggplot(cars, aes(x=speed, y=dist)) +
geom_point() +
geom_point(shape=18, color="red")
ggplot(cars, aes(x=speed, y=dist)) +
geom_point() +
geom_point(color="red")
ggplot(cars, aes(x=speed, y=dist)) +
geom_point() +
geom_point(color=cars$speed)
ggplot(cars, aes(x=speed, y=dist)) +
geom_point() +
geom_point(color=cars$dist)
ggplot(cars, aes(x=speed, y=dist)) +
geom_point() +
geom_point(color=cars$dist) +
geom_smooth(method=lm,  linetype="dashed",
color="darkred", fill="blue")
ggplot(cars, aes(x=speed, y=dist), color=cars$speed) +
geom_point() +
geom_point()
ggplot(cars, aes(x=speed, y=dist)) +
geom_point() +
geom_point(aes(color=cars$speed))
ggplot(cars, aes(x=speed, y=dist)) +
geom_point() +
geom_point(aes(color=cars$dist))
ggplot(cars, aes(x=speed, y=dist)) +
geom_point() +
geom_point(aes(color=cars$dist)) +
geom_smooth(method=lm,  linetype="dashed",
color="darkred", fill="blue")
ggplot(cars, aes(x=speed, y=dist)) +
geom_point() +
geom_point(aes(color=cars$dist)) +
geom_smooth(method=lm,  linetype="dashed",
color="darkred", fill="blue") +
labs(title="Distancia vs Velocidad",
x="Velocidad", y = "Distancia")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
```{r, include=FALSE}
set.seed(1234)
set.seed(1234)
## Introducción del problema
El objetivo de este informe es el de conocer la relación entre la velocidad y la distancia de frenado
## Estudio exploratorio de los datos y Visualización de los datos
```{r libraries, warning=FALSE, message=FALSE}
library(ggplot2)
library(ggplot2)
Comprobar que tipo de datos tiene el conjunto de elementos proporcionado mediante la función “head”.
```{r head, warning=FALSE, message=FALSE}
head(airquality)
summary(airquality)
ggplot(airquality$Ozone) +
geom_bar(stat="identity",position=position_dodge()) +
geom_smooth(method=lm)
ggplot(airquality, aes(x=Ozone)) +
geom_bar(stat="identity",position=position_dodge()) +
geom_smooth(method=lm)
ggplot(airquality, aes(x=Ozone, y=count())) +
geom_bar(stat="identity",position=position_dodge()) +
geom_smooth(method=lm)
ggplot(airquality, aes(x=Ozone, y=count) +
ggplot(airquality, aes(Ozone)) +
geom_bar(stat="identity", position=position_dodge()) +
geom_smooth(method=lm)
ggplot(airquality, aes(Ozone)) +
ggplot(airquality, aes(Ozone))
ggplot(airquality, aes(Ozone)) +
geom_bar(stat="identity", position=position_dodge())
ggplot(airquality, aes(Ozone)) +
geom_bar(stat="count", position=position_dodge()) +
geom_smooth(method=lm)
ggplot(airquality, aes(Ozone)) +
geom_bar(stat="count", position=position_dodge())
ggplot(airquality, aes(x=Ozone, y=Month)) +
geom_bar(stat="count", position=position_dodge())
ggplot(airquality, aes(x=Ozone, y=Month)) +
geom_bar(stat="identity", position=position_dodge())
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity", position=position_dodge())
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar()
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(method=lm)
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(method="lm")
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth()
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(method=lm)
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(method=lm,
formula=y~ns(x,8))
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(method=lm)
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(method=lm)
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
+
geom_smooth(data=airquality,
aes(x = Month, y = Ozone, group=1),
method = "lm", se= FALSE, color = "firebrick1", size = 2)
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone, group=1),
method = "lm", se= FALSE, color = "firebrick1", size = 2)
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone, group=1),
method = "lm", se= FALSE)
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm", se= FALSE)
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm")
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
coord_cartesian(ylim = c(12,60))
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
scale_y_continuous(sec.axis = sec_axis(trans = ~ . / 6, name = "Geom_smooth"))
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
scale_y_continuous(sec.axis = sec_axis(trans = ~ . / 200, name = "Geom_smooth"))
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
scale_y_continuous(sec.axis = sec_axis(trans = ~ . / 1000, name = "Geom_smooth"))
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
scale_y_continuous(sec.axis = sec_axis(trans = ~ . / 10000, name = "Geom_smooth"))
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
scale_y_continuous(sec.axis = sec_axis(trans = ~ . / 1000000, name = "Geom_smooth"))
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm",
na.rm=FALSE) +
scale_y_continuous(sec.axis = sec_axis(trans = ~ . / 1000000, name = "Geom_smooth"))
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm",
na.rm=FALSE) +
scale_y_continuous(sec.axis = dup_axis(name = NULL, labels = NULL), name = "Geom_smooth"))
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm",
na.rm=FALSE) +
scale_y_continuous(sec.axis = dup_axis(name = NULL, labels = NULL), name = "Geom_smooth")
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
coord_cartesian(ylim = c(12,60))
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
coord_cartesian(ylim = c(12,60))
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
#  coord_cartesian(ylim = c(12,60)) +
scale_y_continuous(sec.axis = sec_axis( trans=~.*10, name = "Geom_smooth")
)
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
#  coord_cartesian(ylim = c(12,60)) +
scale_y_continuous(sec.axis = sec_axis( trans=~./50, name = "Geom_smooth")
)
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
#  coord_cartesian(ylim = c(12,60)) +
scale_y_continuous(sec.axis = sec_axis( trans=~./500, name = "Geom_smooth")
)
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
#  coord_cartesian(ylim = c(12,60)) +
scale_y_continuous(sec.axis = sec_axis( trans=~./5000, name = "Geom_smooth")
)
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
#  coord_cartesian(ylim = c(12,60)) +
scale_y_continuous(sec.axis = sec_axis( trans=~./50000, name = "Geom_smooth")
)
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
#  coord_cartesian(ylim = c(12,60)) +
scale_y_continuous(sec.axis = sec_axis( trans=~./50000, name = "Geom_smooth")
) +
theme_ipsum()
ggplot(airquality, aes(x=Month, y=mean(Ozone))) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
#  coord_cartesian(ylim = c(12,60)) +
scale_y_continuous(sec.axis = sec_axis( trans=~./50000, name = "Geom_smooth")
) +
theme_ipsum()
ggplot(airquality, aes(x=Month, y=mean(Ozone))) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
#  coord_cartesian(ylim = c(12,60)) +
scale_y_continuous(sec.axis = sec_axis( trans=~./50000, name = "Geom_smooth")
)
ggplot(airquality, aes(x=Month, y=mean(Ozone))) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
#  coord_cartesian(ylim = c(12,60)) +
scale_y_continuous(sec.axis = sec_axis( trans=~./1, name = "Geom_smooth")
)
ggplot(airquality, aes(x=Month, y=mean(Ozone))) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm")
ggplot(airquality, aes(x=Month, y=mean(Ozone))) +
geom_bar(stat="identity")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm")
ggplot(airquality, aes(x=Month, y=mean(Ozone))) +
geom_bar(stat="identity")
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="summary")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
#  coord_cartesian(ylim = c(12,60)) +
scale_y_continuous(sec.axis = sec_axis( trans=~./50000, name = "Geom_smooth")
)
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="summary")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
#  coord_cartesian(ylim = c(12,60)) +
scale_y_continuous(sec.axis = sec_axis( trans=~./1, name = "Geom_smooth")
)
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="summary")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
#  coord_cartesian(ylim = c(12,60))
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="summary")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm")
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="summary")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm")
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="summary", fun.y = "mean")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
scale_y_continuous(sec.axis = sec_axis( trans=~./1, name = "Geom_smooth"))
ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="summary", fun.y = "mean")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
scale_y_continuous(sec.axis = sec_axis( trans=~./1, name = "Regrression"))
ggplot(airquality, aes(x=Month, y=Solar.R)) +
geom_bar(stat="summary", fun.y = "mean")  +
geom_smooth(data=airquality,
aes(x = Month, y = Solar.R),
method = "lm") +
scale_y_continuous(sec.axis = sec_axis( trans=~./1, name = "Regrression"))
ggplot(airquality, aes(x=Month, y=Wind)) +
geom_bar(stat="summary", fun.y = "mean")  +
geom_smooth(data=airquality,
aes(x = Month, y = Wind),
method = "lm") +
scale_y_continuous(sec.axis = sec_axis( trans=~./1, name = "Regression"))
ggplot(airquality, aes(x=Month, y=Temp)) +
geom_bar(stat="summary", fun.y = "mean")  +
geom_smooth(data=airquality,
aes(x = Month, y = Temp),
method = "lm") +
scale_y_continuous(sec.axis = sec_axis( trans=~./1, name = "Regression"))
ggplot(airquality, aes(x=Month, y=Temp)) +
geom_bar(stat="summary", fun.y = "mean")  +
geom_smooth(data=airquality,
aes(x = Month, y = Temp),
method = "lm",  formula = my.formula) +
scale_y_continuous(sec.axis = sec_axis( trans=~./1, name = "Regression"))
my.formula <- airquality$Temp ~ airquality$Month
ggplot(airquality, aes(x=Month, y=Temp)) +
geom_bar(stat="summary", fun.y = "mean")  +
geom_smooth(data=airquality,
aes(x = Month, y = Temp),
method = "lm",  formula = my.formula) +
scale_y_continuous(sec.axis = sec_axis( trans=~./1, name = "Regression"))
ggplot(airquality, aes(x=Month, y=Temp)) +
geom_bar(stat="summary", fun.y = "mean")  +
geom_smooth(data=airquality,
aes(x = Month, y = Temp),
method = "lm") +
scale_y_continuous(sec.axis = sec_axis( trans=~./1, name = "Regression"))
```{r libraries_2, warning=FALSE, message=FALSE}
library(cowplot)
install.packages("cowplot")
library(cowplot)
library(cowplot)
p1 <- ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="summary", fun.y = "mean")  +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
scale_y_continuous(sec.axis = sec_axis( trans=~./1, name = "Regression"))
p2 <- ggplot(airquality, aes(x=Month, y=Solar.R)) +
geom_bar(stat="summary", fun.y = "mean")  +
geom_smooth(data=airquality,
aes(x = Month, y = Solar.R),
method = "lm") +
scale_y_continuous(sec.axis = sec_axis( trans=~./1, name = "Regression"))
p3 <- ggplot(airquality, aes(x=Month, y=Wind)) +
geom_bar(stat="summary", fun.y = "mean")  +
geom_smooth(data=airquality,
aes(x = Month, y = Wind),
method = "lm") +
scale_y_continuous(sec.axis = sec_axis( trans=~./1, name = "Regression"))
p4 <- ggplot(airquality, aes(x=Month, y=Temp)) +
geom_bar(stat="summary", fun.y = "mean")  +
geom_smooth(data=airquality,
aes(x = Month, y = Temp),
method = "lm") +
scale_y_continuous(sec.axis = sec_axis( trans=~./1, name = "Regression"))
plot_grid(p1, p2, p3, p4, labels = c('Ozone', 'Solar.R', 'Wind', 'Temp'))
p2 <- ggplot(airquality, aes(x=Month, y=Solar.R)) +
geom_bar(stat="summary", fun.y = "mean") +
geom_smooth(data=airquality,
aes(x = Month, y = Solar.R),
method = "lm") +
scale_y_continuous(sec.axis = sec_axis( trans=~./1, name = "Regression"))
library(cowplot)
p1 <- ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_bar(stat="summary", fun.y = "mean") +
geom_smooth(data=airquality,
aes(x = Month, y = Ozone),
method = "lm") +
scale_y_continuous(sec.axis = sec_axis( trans=~./1, name = "Regression"))
p2 <- ggplot(airquality, aes(x=Month, y=Solar.R)) +
geom_bar(stat="summary", fun.y = "mean") +
geom_smooth(data=airquality,
aes(x = Month, y = Solar.R),
method = "lm") +
scale_y_continuous(sec.axis = sec_axis( trans=~./1, name = "Regression"))
plot_grid(p1, p2, p3, p4, labels = c('Ozone', 'Solar.R', 'Wind', 'Temp'))
De manera análoga al gráfico anterior crear un gráfico compuesto por las cuatro densidades de cada variable. Utilizar la función “geom_density”
p1 <- ggplot(airquality, aes(x=Month, y=Ozone)) +
geom_density(stat="summary", fun.y = "mean")
p2 <- ggplot(airquality, aes(x=Month, y=Solar.R)) +
geom_density(stat="summary", fun.y = "mean")
p3 <- ggplot(airquality, aes(x=Month, y=Wind)) +
geom_density(stat="summary", fun.y = "mean")
p4 <- ggplot(airquality, aes(x=Month, y=Temp)) +
geom_density(stat="summary", fun.y = "mean")
plot_grid(p1, p2, p3, p4, labels = c('Ozone', 'Solar.R', 'Wind', 'Temp'))
set.seed(1234)
